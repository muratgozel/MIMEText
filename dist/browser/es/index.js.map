{"version":3,"file":"index.js","sources":["../../../src/MIMETextError.js","../../../src/MIMEMessageHeader.js","../../../src/MIMEMessageContent.js","../../../src/Mailbox.js","../../../src/MIMEMessage.js","../../../src/entrypoints/browser.js"],"sourcesContent":["export default class MIMETextError extends Error {\n  constructor(message, description) {\n    super(message)\n    this.description = description ? description.trim().replace(/[\\s]{2,}/, ' ') : null\n    this.name = 'MIMETextError'\n  }\n}\n","import MIMETextError from './MIMETextError.js'\n\n/*\n* Headers are based on: https://www.rfc-editor.org/rfc/rfc4021#section-2.1\n* (Some are ignored as they can be added later or as a custom header.)\n*/\n\nexport default class MIMEMessageHeader {\n  constructor(placement) {\n    this.placement = placement\n    this.store = [\n      {\n        placement: 'header',\n        name: 'Date',\n        // value property is what user sets for this header\n        value: null,\n        // the generator function generates a value for this header unless\n        // user specified a value or user disabled this property\n        generator: () => (new Date().toGMTString()).replace(/GMT|UTC/gi, '+0000'),\n        disabled: false,\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'From',\n        // required property indicates that this property must be set\n        required: true,\n        dump: (v) => {\n          return v.dump()\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Sender',\n        dump: (v) => {\n          return v.dump()\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Reply-To',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'To',\n        required: true,\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Cc',\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Bcc',\n        dump: (vs) => {\n          return vs.map(v => v.dump()).join(', ')\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Message-ID',\n        disabled: false,\n        generator: (ctx) => {\n          const datestr = Date.now().toString()\n          const randomstr = Math.random().toString(36).slice(2)\n          const domain = ctx.store.filter(item => item.name == 'From')[0].value.getAddrDomain()\n          return '<' + randomstr + '-' + datestr + '@' + domain + '>'\n        },\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'header',\n        name: 'Subject',\n        required: true,\n        dump: (v, ctx) => {\n          return '=?utf-8?B?' + ctx.toBase64(v) + '?='\n        }\n      },\n      {\n        placement: 'header',\n        name: 'MIME-Version',\n        generator: () => '1.0',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-ID',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Type',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Transfer-Encoding',\n        dump: (v) => {\n          return v\n        }\n      },\n      {\n        placement: 'content',\n        name: 'Content-Disposition',\n        dump: (v) => {\n          return v\n        }\n      }\n    ]\n  }\n\n  set(name, value) {\n    for (const item of this.store) {\n      if (item.name.toLowerCase() == name.toLowerCase()) {\n        item.value = value\n        return item\n      }\n    }\n\n    const newHeader = {\n      custom: true,\n      placement: this.placement,\n      name: name,\n      value: value,\n      dump: (v) => {\n        return v\n      }\n    }\n\n    this.store.push(newHeader)\n\n    return newHeader\n  }\n\n  get(name) {\n    for (const item of this.store) {\n      if (item.name.toLowerCase() == name.toLowerCase()) {\n        return item.value\n      }\n    }\n    return undefined\n  }\n\n  toObject() {\n    return this.store.reduce((memo, item) => {\n      memo[item.name] = item.value\n      return memo\n    }, {})\n  }\n\n  dump(envctx) {\n    const ctx = {\n      toBase64: envctx.toBase64,\n      store: this.store\n    }\n\n    let lines = ''\n    for (const item of this.store) {\n      if (item.placement != this.placement) continue;\n\n      const v = item.value\n        ? item.value\n        : !item.disabled && typeof item.generator == 'function'\n          ? item.generator(ctx)\n          : null\n\n      if (!v && item.required) {\n        throw new MIMETextError('MISSING_HEADER', `The \"${item.name}\" header is required.`)\n      }\n\n      if (!v) continue;\n\n      lines += `${item.name}: ${item.dump(v, ctx)}\\r\\n`\n    }\n\n    return lines.slice(0, -2)\n  }\n}\n","import MIMEMessageHeader from './MIMEMessageHeader.js'\n\nexport default class MIMEMessageContent {\n  constructor(data) {\n    this.data = data\n    this.headers = new MIMEMessageHeader('content')\n  }\n\n  setHeader() {\n    this.headers.set(arguments[0], arguments[1])\n    return this\n  }\n\n  setHeaders(obj) {\n    Object.keys(obj).map(prop => this.setHeader(prop, obj[prop]))\n    return this\n  }\n\n  getHeaders() {\n    return this.headers.toObject()\n  }\n\n  getHeader(name) {\n    return this.headers.get(name)\n  }\n\n  isAttachment() {\n    const d = this.headers.get('Content-Disposition')\n    return d && d.indexOf('attachment') !== -1 ? true : false\n  }\n\n  dump(envctx, boundaries) {\n    const headerBlock = this.headers.dump(envctx)\n\n    if (this.isAttachment()) {\n      return `--${boundaries.mixed}\n${headerBlock}\n\n${this.data}\n`\n    }\n    else {\n      return `${headerBlock}\\r\\n\\r\\n${this.data}`\n    }\n  }\n}\n","import MIMETextError from './MIMETextError.js'\n\nexport default class Mailbox {\n  constructor(input, opts={type: 'to'}) {\n    this.reSpecCompliantAddr = /(([^<>\\n\\r]+)\\s)?<[^\\n\\r]+>/\n\n    this.name = null\n    this.addr = null\n    this.type = opts.type || 'to'\n    this.input = input\n    this.inputType = this.findInputType(input)\n\n    this.createMailbox()\n  }\n\n  findInputType(input) {\n    if (Object.prototype.toString.call(input) === '[object Object]') {\n      if (!input.addr) {\n        throw new MIMETextError('INVALID_MAILBOX', `\n          The input should have an \"addr\" property that specifies the email address \\\n          of the recipient.\n        `)\n      }\n      return 'OBJECT'\n    }\n    else if (this.reSpecCompliantAddr.test(input)) {\n      return 'SPEC_COMPLIANT_TEXT'\n    }\n    else if (typeof input == 'string') {\n      return 'TEXT'\n    }\n    else {\n      throw new MIMETextError('INVALID_MAILBOX')\n    }\n  }\n\n  parseSpecCompliantText(text) {\n    text.trim()\n\n    if (text.slice(0, 1) == '<' && text.slice(-1) == '>') {\n      return {addr: text.slice(1, -1)}\n    }\n\n    const arr = text.split(' <')\n    arr[0] = /^(\"|')/.test(arr[0]) ? arr[0].slice(1) : arr[0]\n    arr[0] = /(\"|')$/.test(arr[0]) ? arr[0].slice(0, -1) : arr[0]\n    arr[1] = arr[1].slice(0, -1)\n\n    return {name: arr[0], addr: arr[1]}\n  }\n\n  createMailbox() {\n    switch (this.inputType) {\n      case 'OBJECT':\n        this.addr = this.input.addr\n        this.name = this.input.name || null\n        this.type = this.input.type || this.type\n        break;\n\n      case 'SPEC_COMPLIANT_TEXT':\n        const obj = this.parseSpecCompliantText(this.input)\n        this.addr = obj.addr\n        this.name = obj.name || null\n        break;\n\n      case 'TEXT':\n        this.addr = this.input\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  getAddrDomain() {\n    if (!this.addr) {\n      return ''\n    }\n\n    return this.addr.split('@')[1]\n  }\n\n  dump() {\n    let result = `<${this.addr}>`\n\n    if (this.name) {\n      result = `\"${this.name}\" ${result}`\n    }\n\n    return result\n  }\n\n  toObject() {\n    return {\n      name: this.name,\n      addr: this.addr,\n      type: this.type\n    }\n  }\n}\n","import MIMEMessageHeader from './MIMEMessageHeader.js'\nimport MIMEMessageContent from './MIMEMessageContent.js'\nimport MIMETextError from './MIMETextError.js'\nimport Mailbox from './Mailbox.js'\n\nexport default class MIMEMessage {\n  constructor(envctx) {\n    this.envctx = envctx\n    this.headers = new MIMEMessageHeader('header')\n    this.messages = []\n\n    this.generateBoundaries()\n  }\n\n  generateBoundaries() {\n    this.boundaries = {\n      mixed: Math.random().toString(36).slice(2),\n      alt: Math.random().toString(36).slice(2)\n    }\n  }\n\n  setSender(input) {\n    const mailbox = new Mailbox(input, {type: 'from'})\n\n    this.setHeader('From', mailbox)\n\n    return mailbox\n  }\n\n  getSender() {\n    return this.getHeader('From')\n  }\n\n  setRecipients(input, opts={type: 'to'}) {\n    const recs = []\n\n    if (Array.isArray(input)) {\n      input.map(input => recs.push( new Mailbox(input, opts) ))\n    }\n    else {\n      recs.push( new Mailbox(input, opts) )\n    }\n\n    this.setHeader(opts.type, recs)\n\n    return recs\n  }\n\n  getRecipients(opts={type: 'to'}) {\n    return this.getHeader(opts.type) || []\n  }\n\n  setRecipient(input) {\n    return this.setRecipients(input, {type: 'to'})\n  }\n\n  setTo(input) {\n    return this.setRecipients(input, {type: 'to'})\n  }\n\n  setCc(input) {\n    return this.setRecipients(input, {type: 'cc'})\n  }\n\n  setBcc(input) {\n    return this.setRecipients(input, {type: 'bcc'})\n  }\n\n  setSubject(value) {\n    this.setHeader('subject', value)\n    return value\n  }\n\n  getSubject() {\n    return this.getHeader('subject')\n  }\n\n  setHeader() {\n    this.headers.set(arguments[0], arguments[1])\n    return arguments[0]\n  }\n\n  getHeader(name) {\n    return this.headers.get(name)\n  }\n\n  setHeaders(obj) {\n    Object.keys(obj).map(prop => this.setHeader(prop, obj[prop]))\n    return this\n  }\n\n  getHeaders() {\n    return this.headers.toObject()\n  }\n\n  setMessage(type, data, moreHeaders={}) {\n    const validTypes = ['text/html', 'text/plain', 'text/x-amp-html']\n\n    if (validTypes.indexOf(type) === -1) {\n      throw new MIMETextError('INVALID_MESSAGE_TYPE', `\n        Invalid content type for the message. Supported content types \\\n        are ${validTypes.join(', ')} but you specified \"${type}\".\n      `)\n    }\n\n    const headers = Object.assign({}, moreHeaders, {\n      'Content-Type': `${type}; charset=UTF-8`\n    })\n    const msg = new MIMEMessageContent(data)\n\n    msg.setHeaders(headers)\n\n    this.messages.push(msg)\n\n    return msg\n  }\n\n  setAttachment(filename, type, data, moreHeaders={}) {\n    const headers = Object.assign({}, moreHeaders, {\n      'Content-Type': `${type}; charset=UTF-8`,\n      'Content-Transfer-Encoding': 'base64',\n      'Content-Disposition': `attachment;filename=\"${filename}\"`\n    })\n    const msg = new MIMEMessageContent(data)\n\n    msg.setHeaders(headers)\n\n    this.messages.push(msg)\n\n    return this\n  }\n\n  getMessageByType(type) {\n    const matches = this.messages.filter(m => m.getHeader('Content-Type').indexOf(type) !== -1)\n    if (Array.isArray(matches) && matches.length > 0) {\n      return matches[0]\n    }\n    else {\n      return undefined\n    }\n  }\n\n  getAttachments() {\n    return this.messages.filter(m => m.isAttachment() === true) || []\n  }\n\n  asRaw() {\n    let lines = this.headers.dump(this.envctx)\n\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const ampMessage = this.getMessageByType('text/x-amp-html')\n    const hasAttachments = this.getAttachments().length > 0\n    const hasPlainTextAlt = plainTextMessage instanceof MIMEMessageContent && htmlMessage instanceof MIMEMessageContent\n    const hasAmpAlt = plainTextMessage instanceof MIMEMessageContent && htmlMessage instanceof MIMEMessageContent && ampMessage instanceof MIMEMessageContent\n\n    if (hasAttachments && hasPlainTextAlt) {\n      return this.asRawMixedAlt(lines)\n    }\n    else if (hasAttachments) {\n      return this.asRawMixed(lines)\n    }\n    else if(hasAmpAlt) {\n      return this.asRawAmp(lines)\n    }\n    else if (hasPlainTextAlt) {\n      return this.asRawAlt(lines)\n    }\n    else {\n      return this.asRawMessage(lines)\n    }\n  }\n\n  asEncoded() {\n    return this.envctx.toBase64WebSafe( this.asRaw() )\n  }\n\n  asRawMessage(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const message = htmlMessage || plainTextMessage\n\n    lines = `${lines}\n${message.dump(this.envctx, this.boundaries)}`\n\n    return lines\n  }\n\n  asRawAlt(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n\n    lines = `${lines}\nContent-Type: multipart/alternative; boundary=${this.boundaries.alt}\n\n--${this.boundaries.alt}\n${plainTextMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${htmlMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}--`\n\n    return lines\n  }\n\n  asRawAmp(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const ampMessage = this.getMessageByType('text/x-amp-html')\n\n    lines = `${lines}\nContent-Type: multipart/alternative; boundary=${this.boundaries.alt}\n\n--${this.boundaries.alt}\n${plainTextMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${ampMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${htmlMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}--`\n\n    return lines\n  }\n\n  asRawMixed(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const message = htmlMessage || plainTextMessage\n    const attachments = this.getAttachments()\n      .map(a => a.dump(this.envctx, this.boundaries))\n      .join('')\n      .replace(/[\\r\\n]$/g, '')\n\n    lines = `${lines}\nContent-Type: multipart/mixed; boundary=${this.boundaries.mixed}\n\n--${this.boundaries.mixed}\n${message.dump(this.envctx, this.boundaries)}\n\n${attachments}\n\n--${this.boundaries.mixed}--`\n\n    return lines\n  }\n\n  asRawMixedAlt(lines) {\n    const plainTextMessage = this.getMessageByType('text/plain')\n    const htmlMessage = this.getMessageByType('text/html')\n    const attachments = this.getAttachments()\n      .map(a => a.dump(this.envctx, this.boundaries))\n      .join('')\n      .replace(/[\\r\\n]$/g, '')\n\n    lines = `${lines}\nContent-Type: multipart/mixed; boundary=${this.boundaries.mixed}\n\n--${this.boundaries.mixed}\nContent-Type: multipart/alternative; boundary=${this.boundaries.alt}\n\n--${this.boundaries.alt}\n${plainTextMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}\n${htmlMessage.dump(this.envctx, this.boundaries)}\n\n--${this.boundaries.alt}--\n${attachments}\n\n--${this.boundaries.mixed}--`\n\n    return lines\n  }\n\n  toBase64(v) {\n    return this.envctx.toBase64(v)\n  }\n}\n","import MIMEMessage from '../MIMEMessage.js'\n\nconst envctx = {\n  toBase64: function toBase64(data) {\n    return btoa(data)\n  },\n  toBase64WebSafe: function toBase64WebSafe(data) {\n    return btoa(data)\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n      .replace(/=+$/, '')\n  }\n}\n\nclass NodeMIMEMessage extends MIMEMessage {\n  constructor() {\n    super(envctx)\n  }\n}\n\nexport function createMimeMessage() {\n  return new NodeMIMEMessage()\n}\n"],"names":["MIMETextError","message","description","replace","name","Error","MIMEMessageHeader","placement","store","value","generator","Date","toGMTString","disabled","dump","v","required","vs","join","ctx","datestr","now","toString","randomstr","Math","random","domain","item","getAddrDomain","toBase64","toLowerCase","newHeader","custom","push","undefined","memo","envctx","lines","MIMEMessageContent","data","headers","set","arguments","obj","prop","setHeader","toObject","get","d","boundaries","headerBlock","isAttachment","mixed","Mailbox","input","opts","type","reSpecCompliantAddr","addr","inputType","findInputType","createMailbox","Object","prototype","call","test","text","arr","split","parseSpecCompliantText","result","MIMEMessage","messages","generateBoundaries","alt","mailbox","getHeader","recs","Array","isArray","setRecipients","moreHeaders","validTypes","msg","setHeaders","filename","matches","m","length","plainTextMessage","getMessageByType","htmlMessage","ampMessage","hasAttachments","getAttachments","hasPlainTextAlt","hasAmpAlt","asRawMixedAlt","asRawMixed","asRawAmp","asRawAlt","asRawMessage","toBase64WebSafe","asRaw","attachments","a","btoa","NodeMIMEMessage","createMimeMessage"],"mappings":"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"}